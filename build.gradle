apply plugin: 'groovy'
apply plugin: 'idea'

repositories {
	mavenCentral()
	flatDir { dirs "lib" }
	flatDir { dirs "${vertxHome}/lib/jars" }
	flatDir { dirs "${vertxHome}/mods/mongo-persistor/lib" }
}

dependencies {
	groovy 'org.codehaus.groovy:groovy:1.8.6'

	compile ':fongo'
	compile ':mongo'
	compile ':vert.x-core'
	compile ':vert.x-platform'
	compile files("${vertxHome}/mods/mongo-persistor")

	runtime 'org.mockito:mockito-core:1.9.0'

	testCompile 'org.spockframework:spock-core:0.6-groovy-1.8'

	testRuntime ':netty'
	testRuntime ':jackson-core'
	testRuntime ':jackson-mapper'
}

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

def vertxModsDir = System.getenv()['VERTX_MODS']
def modsDir = vertxModsDir ? "$vertxModsDir/$project.name" : "$buildDir/mods/$project.name"

task installClasses(type: Sync) {
	from compileGroovy
	from 'src/main/groovy'
	from 'src/main/resources'
	from(configurations.runtime) {
		include '**/*.class'
	}
	into modsDir
}

task installLibs(type: Sync) {
	// this is hacky - should I be using separate configrations?
	from(configurations.runtime.files { !(it.name in ['groovy', 'vert.x-core', 'vert.x-platform']) }) {
		include '*.jar'
	}
	into "$modsDir/lib"
}

task install {
	description 'Installs the busmod to the $VERTX_MODS directory'
	dependsOn 'installClasses', 'installLibs'
}

task runExample(type: Exec) {
	dependsOn 'install'

	workingDir "$projectDir/examples/webapp"
	commandLine 'vertx', 'run', 'App.groovy'
}

task testExample(type: Exec) {
	description 'Runs functional tests against the example project.'
	commandLine 'casperjs', 'test', 'src/test/casper', "--xunit=$testResultsDir/casper-suite.xml", '--ignore-ssl-errors=yes'
}
